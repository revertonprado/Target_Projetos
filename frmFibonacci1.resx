<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>